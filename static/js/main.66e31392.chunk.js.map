{"version":3,"sources":["JSLib/wordcloud2.js","Words.bs.js","Content.bs.js","Fetch.bs.js","Network.bs.js","App.bs.js","Index.bs.js","bindings/ReactDomExperimental.bs.js","reportWebVitals.js","index.js"],"names":["window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","addEventListener","callbacks","undefined","message","evt","data","substr","length","stopImmediatePropagation","id","parseInt","clearImmediate","callback","push","toString","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","isSupported","canvas","document","createElement","getContext","ctx","getImageData","fillText","Array","prototype","some","minFontSize","hanWidth","mWidth","size","font","measureText","width","shuffleArray","arr","j","x","i","Math","floor","random","WordCloud","elements","options","timerId","Date","now","isArray","forEach","el","getElementById","Error","tagName","appendChild","settings","list","fontFamily","fontWeight","color","minSize","weightFactor","clearCanvas","backgroundColor","gridSize","drawOutOfBound","shrinkToFit","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","minRotation","PI","maxRotation","rotationSteps","shuffle","rotateRatio","shape","ellipticity","classes","hover","click","key","factor","pt","theta","sin","thetaPrime","cos","min","abs","sqrt","max","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","getTextFontWeight","g","maskRectWidth","rotationRange","randomHslColor","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","left","eventY","top","y","height","wordcloudhover","info","item","dimension","wordcloudclick","preventDefault","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","getTime","fillGridAt","fillRect","putWord","word","weight","attributes","rotateDeg","extraDataArray","itemCopy","slice","splice","getItemExtraData","fontSize","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","scale","translate","rotate","fillStyle","textBaseline","imageData","gy","occupied","gx","bounds","singleGridLoop","gw","gh","fillTextWidth","fillTextHeight","getTextInfo","r","tryToPutWordAtPoint","gxy","px","py","canFitText","distance","save","restore","span","transformRule","styleRules","position","display","lineHeight","whiteSpace","transform","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","textContent","style","attribute","className","drawText","w","h","updateGrid","concat","sendEvent","type","cancelable","details","event","CustomEvent","detail","dispatchEvent","this","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","removeEventListener","listener","anotherWordCloudStart","loop","drawn","canceled","start","toFixed","stop","make","Props","React","wordCloud","content","result","translations","reduce","acc","trans","backTranslations","map","backTrans","synonym","displayText","confidence","frequencyCount","synonymRecordFactory","filter","displaySource","combinedConfidence","item2","Caml_obj","Words$MyRescriptApp","state","match","setState","Curry","_previousState","request","XMLHttpRequest","param","JSON","stringify","response","charAt","TAG","_0","parse","err","open","send","Network$MyRescriptApp","console","log","synonyms","Caml_array","Content$MyRescriptApp","App$QueryInput","setWord","setInputValue","inputValue","onSubmit","_evt","value","onChange","target","Fetch$MyRescriptApp","root","element","Caml_option","ReactDom","ReactDomExperimental$MyRescriptApp","render","children","App$MyRescriptApp","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals"],"mappings":"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","file":"static/js/main.66e31392.chunk.js","sourcesContent":["/*!\r\n * wordcloud2.js\r\n * http://timdream.org/wordcloud2.js/\r\n *\r\n * Copyright 2011 - 2019 Tim Guan-tin Chien and contributors.\r\n * Released under the MIT license\r\n */\r\n\r\n\"use strict\";\r\n\r\n// setImmediate\r\nif (!window.setImmediate) {\r\n  window.setImmediate = (function setupSetImmediate() {\r\n    return (\r\n      window.msSetImmediate ||\r\n      window.webkitSetImmediate ||\r\n      window.mozSetImmediate ||\r\n      window.oSetImmediate ||\r\n      (function setupSetZeroTimeout() {\r\n        if (!window.postMessage || !window.addEventListener) {\r\n          return null;\r\n        }\r\n\r\n        var callbacks = [undefined];\r\n        var message = \"zero-timeout-message\";\r\n\r\n        // Like setTimeout, but only takes a function argument.  There's\r\n        // no time argument (always zero) and no arguments (you have to\r\n        // use a closure).\r\n        var setZeroTimeout = function setZeroTimeout(callback) {\r\n          var id = callbacks.length;\r\n          callbacks.push(callback);\r\n          window.postMessage(message + id.toString(36), \"*\");\r\n\r\n          return id;\r\n        };\r\n\r\n        window.addEventListener(\r\n          \"message\",\r\n          function setZeroTimeoutMessage(evt) {\r\n            // Skipping checking event source, retarded IE confused this window\r\n            // object with another in the presence of iframe\r\n            if (\r\n              typeof evt.data !== \"string\" ||\r\n              evt.data.substr(0, message.length) !==\r\n                message /* ||\r\n            evt.source !== window */\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            evt.stopImmediatePropagation();\r\n\r\n            var id = parseInt(evt.data.substr(message.length), 36);\r\n            if (!callbacks[id]) {\r\n              return;\r\n            }\r\n\r\n            callbacks[id]();\r\n            callbacks[id] = undefined;\r\n          },\r\n          true\r\n        );\r\n\r\n        /* specify clearImmediate() here since we need the scope */\r\n        window.clearImmediate = function clearZeroTimeout(id) {\r\n          if (!callbacks[id]) {\r\n            return;\r\n          }\r\n\r\n          callbacks[id] = undefined;\r\n        };\r\n\r\n        return setZeroTimeout;\r\n      })() ||\r\n      // fallback\r\n      function setImmediateFallback(fn) {\r\n        window.setTimeout(fn, 0);\r\n      }\r\n    );\r\n  })();\r\n}\r\n\r\nif (!window.clearImmediate) {\r\n  window.clearImmediate = (function setupClearImmediate() {\r\n    return (\r\n      window.msClearImmediate ||\r\n      window.webkitClearImmediate ||\r\n      window.mozClearImmediate ||\r\n      window.oClearImmediate ||\r\n      // \"clearZeroTimeout\" is implement on the previous block ||\r\n      // fallback\r\n      function clearImmediateFallback(timer) {\r\n        window.clearTimeout(timer);\r\n      }\r\n    );\r\n  })();\r\n}\r\n\r\n// Check if WordCloud can run on this browser\r\nvar isSupported = (function isSupported() {\r\n  var canvas = document.createElement(\"canvas\");\r\n  if (!canvas || !canvas.getContext) {\r\n    return false;\r\n  }\r\n\r\n  var ctx = canvas.getContext(\"2d\");\r\n  if (!ctx) {\r\n    return false;\r\n  }\r\n  if (!ctx.getImageData) {\r\n    return false;\r\n  }\r\n  if (!ctx.fillText) {\r\n    return false;\r\n  }\r\n\r\n  if (!Array.prototype.some) {\r\n    return false;\r\n  }\r\n  if (!Array.prototype.push) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n})();\r\n\r\n// Find out if the browser impose minium font size by\r\n// drawing small texts on a canvas and measure it's width.\r\nvar minFontSize = (function getMinFontSize() {\r\n  if (!isSupported) {\r\n    return;\r\n  }\r\n\r\n  var ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n\r\n  // start from 20\r\n  var size = 20;\r\n\r\n  // two sizes to measure\r\n  var hanWidth, mWidth;\r\n\r\n  while (size) {\r\n    ctx.font = size.toString(10) + \"px sans-serif\";\r\n    if (\r\n      ctx.measureText(\"\\uFF37\").width === hanWidth &&\r\n      ctx.measureText(\"m\").width === mWidth\r\n    ) {\r\n      return size + 1;\r\n    }\r\n\r\n    hanWidth = ctx.measureText(\"\\uFF37\").width;\r\n    mWidth = ctx.measureText(\"m\").width;\r\n\r\n    size--;\r\n  }\r\n\r\n  return 0;\r\n})();\r\n\r\nvar getItemExtraData = function (item) {\r\n  if (Array.isArray(item)) {\r\n    var itemCopy = item.slice();\r\n    // remove data we already have (word and weight)\r\n    itemCopy.splice(0, 2);\r\n    return itemCopy;\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\n// Based on http://jsfromhell.com/array/shuffle\r\nvar shuffleArray = function shuffleArray(arr) {\r\n  for (var j, x, i = arr.length; i; ) {\r\n    j = Math.floor(Math.random() * i);\r\n    x = arr[--i];\r\n    arr[i] = arr[j];\r\n    arr[j] = x;\r\n  }\r\n  return arr;\r\n};\r\n\r\nvar timer = {};\r\nvar WordCloud = function WordCloud(elements, options) {\r\n  if (!isSupported) {\r\n    return;\r\n  }\r\n\r\n  var timerId = Math.floor(Math.random() * Date.now());\r\n\r\n  if (!Array.isArray(elements)) {\r\n    elements = [elements];\r\n  }\r\n\r\n  elements.forEach(function (el, i) {\r\n    if (typeof el === \"string\") {\r\n      elements[i] = document.getElementById(el);\r\n      if (!elements[i]) {\r\n        throw new Error(\"The element id specified is not found.\");\r\n      }\r\n    } else if (!el.tagName && !el.appendChild) {\r\n      throw new Error(\r\n        \"You must pass valid HTML elements, or ID of the element.\"\r\n      );\r\n    }\r\n  });\r\n\r\n  /* Default values to be overwritten by options object */\r\n  var settings = {\r\n    list: [],\r\n    fontFamily:\r\n      '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\r\n      '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\r\n    fontWeight: \"normal\",\r\n    color: \"random-dark\",\r\n    minSize: 0, // 0 to disable\r\n    weightFactor: 1,\r\n    clearCanvas: true,\r\n    backgroundColor: \"#fff\", // opaque white = rgba(255, 255, 255, 1)\r\n\r\n    gridSize: 20,\r\n    drawOutOfBound: false,\r\n    shrinkToFit: false,\r\n    origin: null,\r\n\r\n    drawMask: false,\r\n    maskColor: \"rgba(255,0,0,0.3)\",\r\n    maskGapWidth: 0.3,\r\n\r\n    wait: 0,\r\n    abortThreshold: 0, // disabled\r\n    abort: function noop() {},\r\n\r\n    minRotation: -Math.PI / 2,\r\n    maxRotation: Math.PI / 2,\r\n    rotationSteps: 0,\r\n\r\n    shuffle: true,\r\n    rotateRatio: 0.1,\r\n\r\n    // shape: \"circle\",\r\n    shape: \"triangle\",\r\n    ellipticity: 0.65,\r\n\r\n    classes: null,\r\n\r\n    hover: null,\r\n    click: null,\r\n  };\r\n\r\n  if (options) {\r\n    for (var key in options) {\r\n      if (key in settings) {\r\n        settings[key] = options[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Convert weightFactor into a function */\r\n  if (typeof settings.weightFactor !== \"function\") {\r\n    var factor = settings.weightFactor;\r\n    settings.weightFactor = function weightFactor(pt) {\r\n      return pt * factor; // in px\r\n    };\r\n  }\r\n\r\n  /* Convert shape into a function */\r\n  if (typeof settings.shape !== \"function\") {\r\n    switch (settings.shape) {\r\n      case \"circle\":\r\n      /* falls through */\r\n      default:\r\n        // 'circle' is the default and a shortcut in the code loop.\r\n        settings.shape = \"circle\";\r\n        break;\r\n\r\n      case \"cardioid\":\r\n        settings.shape = function shapeCardioid(theta) {\r\n          return 1 - Math.sin(theta);\r\n        };\r\n        break;\r\n\r\n      /*\r\n          To work out an X-gon, one has to calculate \"m\",\r\n          where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\r\n          http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\r\n          2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\r\n          Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\r\n          where t' equals to mod(t, 2PI/X)\r\n         */\r\n\r\n      case \"diamond\":\r\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\r\n        // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\r\n        // +0+..+2*PI\r\n        settings.shape = function shapeSquare(theta) {\r\n          var thetaPrime = theta % ((2 * Math.PI) / 4);\r\n          return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\r\n        };\r\n        break;\r\n\r\n      case \"square\":\r\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+min(1%2Fabs(cos(t\r\n        // )),1%2Fabs(sin(t)))),+t+%3D+0+..+2*PI\r\n        settings.shape = function shapeSquare(theta) {\r\n          return Math.min(\r\n            1 / Math.abs(Math.cos(theta)),\r\n            1 / Math.abs(Math.sin(theta))\r\n          );\r\n        };\r\n        break;\r\n\r\n      case \"triangle-forward\":\r\n        // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\r\n        // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\r\n        // %29%29%2C+t+%3D+0+..+2*PI\r\n        settings.shape = function shapeTriangle(theta) {\r\n          var thetaPrime = theta % ((2 * Math.PI) / 3);\r\n          return (\r\n            1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime))\r\n          );\r\n        };\r\n        break;\r\n\r\n      case \"triangle\":\r\n      case \"triangle-upright\":\r\n        settings.shape = function shapeTriangle(theta) {\r\n          var thetaPrime = (theta + (Math.PI * 3) / 2) % ((2 * Math.PI) / 3);\r\n          return (\r\n            1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime))\r\n          );\r\n        };\r\n        break;\r\n\r\n      case \"pentagon\":\r\n        settings.shape = function shapePentagon(theta) {\r\n          var thetaPrime = (theta + 0.955) % ((2 * Math.PI) / 5);\r\n          return 1 / (Math.cos(thetaPrime) + 0.726543 * Math.sin(thetaPrime));\r\n        };\r\n        break;\r\n\r\n      case \"star\":\r\n        settings.shape = function shapeStar(theta) {\r\n          var thetaPrime = (theta + 0.955) % ((2 * Math.PI) / 10);\r\n          if (\r\n            ((theta + 0.955) % ((2 * Math.PI) / 5)) - (2 * Math.PI) / 10 >=\r\n            0\r\n          ) {\r\n            return (\r\n              1 /\r\n              (Math.cos((2 * Math.PI) / 10 - thetaPrime) +\r\n                3.07768 * Math.sin((2 * Math.PI) / 10 - thetaPrime))\r\n            );\r\n          } else {\r\n            return 1 / (Math.cos(thetaPrime) + 3.07768 * Math.sin(thetaPrime));\r\n          }\r\n        };\r\n        break;\r\n    }\r\n  }\r\n\r\n  /* Make sure gridSize is a whole number and is not smaller than 4px */\r\n  settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\r\n\r\n  /* shorthand */\r\n  var g = settings.gridSize;\r\n  var maskRectWidth = g - settings.maskGapWidth;\r\n\r\n  /* normalize rotation settings */\r\n  var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\r\n  var rotationSteps = Math.abs(Math.floor(settings.rotationSteps));\r\n  var minRotation = Math.min(settings.maxRotation, settings.minRotation);\r\n\r\n  /* information/object available to all functions, set when start() */\r\n  var grid, // 2d array containing filling information\r\n    ngx,\r\n    ngy, // width and height of the grid\r\n    center, // position of the center of the cloud\r\n    maxRadius;\r\n\r\n  /* timestamp for measuring each putWord() action */\r\n  var escapeTime;\r\n\r\n  /* function for getting the color of the text */\r\n  var getTextColor;\r\n  function randomHslColor(min, max) {\r\n    return (\r\n      \"hsl(\" +\r\n      (Math.random() * 360).toFixed() +\r\n      \",\" +\r\n      (Math.random() * 30 + 70).toFixed() +\r\n      \"%,\" +\r\n      (Math.random() * (max - min) + min).toFixed() +\r\n      \"%)\"\r\n    );\r\n  }\r\n  switch (settings.color) {\r\n    case \"random-dark\":\r\n      getTextColor = function getRandomDarkColor() {\r\n        return randomHslColor(10, 50);\r\n      };\r\n      break;\r\n\r\n    case \"random-light\":\r\n      getTextColor = function getRandomLightColor() {\r\n        return randomHslColor(50, 90);\r\n      };\r\n      break;\r\n\r\n    default:\r\n      if (typeof settings.color === \"function\") {\r\n        getTextColor = settings.color;\r\n      }\r\n      break;\r\n  }\r\n\r\n  /* function for getting the font-weight of the text */\r\n  var getTextFontWeight;\r\n  if (typeof settings.fontWeight === \"function\") {\r\n    getTextFontWeight = settings.fontWeight;\r\n  }\r\n\r\n  /* function for getting the classes of the text */\r\n  var getTextClasses = null;\r\n  if (typeof settings.classes === \"function\") {\r\n    getTextClasses = settings.classes;\r\n  }\r\n\r\n  /* Interactive */\r\n  var interactive = false;\r\n  var infoGrid = [];\r\n  var hovered;\r\n\r\n  var getInfoGridFromMouseTouchEvent = function getInfoGridFromMouseTouchEvent(\r\n    evt\r\n  ) {\r\n    var canvas = evt.currentTarget;\r\n    var rect = canvas.getBoundingClientRect();\r\n    var clientX;\r\n    var clientY;\r\n    /** Detect if touches are available */\r\n    if (evt.touches) {\r\n      clientX = evt.touches[0].clientX;\r\n      clientY = evt.touches[0].clientY;\r\n    } else {\r\n      clientX = evt.clientX;\r\n      clientY = evt.clientY;\r\n    }\r\n    var eventX = clientX - rect.left;\r\n    var eventY = clientY - rect.top;\r\n\r\n    var x = Math.floor((eventX * (canvas.width / rect.width || 1)) / g);\r\n    var y = Math.floor((eventY * (canvas.height / rect.height || 1)) / g);\r\n\r\n    return infoGrid[x][y];\r\n  };\r\n\r\n  var wordcloudhover = function wordcloudhover(evt) {\r\n    var info = getInfoGridFromMouseTouchEvent(evt);\r\n\r\n    if (hovered === info) {\r\n      return;\r\n    }\r\n\r\n    hovered = info;\r\n    if (!info) {\r\n      settings.hover(undefined, undefined, evt);\r\n\r\n      return;\r\n    }\r\n\r\n    settings.hover(info.item, info.dimension, evt);\r\n  };\r\n\r\n  var wordcloudclick = function wordcloudclick(evt) {\r\n    var info = getInfoGridFromMouseTouchEvent(evt);\r\n    if (!info) {\r\n      return;\r\n    }\r\n\r\n    settings.click(info.item, info.dimension, evt);\r\n    evt.preventDefault();\r\n  };\r\n\r\n  /* Get points on the grid for a given radius away from the center */\r\n  var pointsAtRadius = [];\r\n  var getPointsAtRadius = function getPointsAtRadius(radius) {\r\n    if (pointsAtRadius[radius]) {\r\n      return pointsAtRadius[radius];\r\n    }\r\n\r\n    // Look for these number of points on each radius\r\n    var T = radius * 8;\r\n\r\n    // Getting all the points at this radius\r\n    var t = T;\r\n    var points = [];\r\n\r\n    if (radius === 0) {\r\n      points.push([center[0], center[1], 0]);\r\n    }\r\n\r\n    while (t--) {\r\n      // distort the radius to put the cloud in shape\r\n      var rx = 1;\r\n      if (settings.shape !== \"circle\") {\r\n        rx = settings.shape((t / T) * 2 * Math.PI); // 0 to 1\r\n      }\r\n\r\n      // Push [x, y, t] t is used solely for getTextColor()\r\n      points.push([\r\n        center[0] + radius * rx * Math.cos((-t / T) * 2 * Math.PI),\r\n        center[1] +\r\n          radius * rx * Math.sin((-t / T) * 2 * Math.PI) * settings.ellipticity,\r\n        (t / T) * 2 * Math.PI,\r\n      ]);\r\n    }\r\n\r\n    pointsAtRadius[radius] = points;\r\n    return points;\r\n  };\r\n\r\n  /* Return true if we had spent too much time */\r\n  var exceedTime = function exceedTime() {\r\n    return (\r\n      settings.abortThreshold > 0 &&\r\n      new Date().getTime() - escapeTime > settings.abortThreshold\r\n    );\r\n  };\r\n\r\n  /* Get the deg of rotation according to settings, and luck. */\r\n  var getRotateDeg = function getRotateDeg() {\r\n    if (settings.rotateRatio === 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (Math.random() > settings.rotateRatio) {\r\n      return 0;\r\n    }\r\n\r\n    if (rotationRange === 0) {\r\n      return minRotation;\r\n    }\r\n\r\n    if (rotationSteps > 0) {\r\n      // Min rotation + zero or more steps * span of one step\r\n      return (\r\n        minRotation +\r\n        (Math.floor(Math.random() * rotationSteps) * rotationRange) /\r\n          (rotationSteps - 1)\r\n      );\r\n    } else {\r\n      return minRotation + Math.random() * rotationRange;\r\n    }\r\n  };\r\n\r\n  var getTextInfo = function getTextInfo(\r\n    word,\r\n    weight,\r\n    rotateDeg,\r\n    extraDataArray\r\n  ) {\r\n    // calculate the acutal font size\r\n    // fontSize === 0 means weightFactor function wants the text skipped,\r\n    // and size < minSize means we cannot draw the text.\r\n    var debug = false;\r\n    var fontSize = settings.weightFactor(weight);\r\n    if (fontSize <= settings.minSize) {\r\n      return false;\r\n    }\r\n\r\n    // Scale factor here is to make sure fillText is not limited by\r\n    // the minium font size set by browser.\r\n    // It will always be 1 or 2n.\r\n    var mu = 1;\r\n    if (fontSize < minFontSize) {\r\n      mu = (function calculateScaleFactor() {\r\n        var mu = 2;\r\n        while (mu * fontSize < minFontSize) {\r\n          mu += 2;\r\n        }\r\n        return mu;\r\n      })();\r\n    }\r\n\r\n    // Get fontWeight that will be used to set fctx.font\r\n    var fontWeight;\r\n    if (getTextFontWeight) {\r\n      fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray);\r\n    } else {\r\n      fontWeight = settings.fontWeight;\r\n    }\r\n\r\n    var fcanvas = document.createElement(\"canvas\");\r\n    var fctx = fcanvas.getContext(\"2d\", { willReadFrequently: true });\r\n\r\n    fctx.font =\r\n      fontWeight +\r\n      \" \" +\r\n      (fontSize * mu).toString(10) +\r\n      \"px \" +\r\n      settings.fontFamily;\r\n\r\n    // Estimate the dimension of the text with measureText().\r\n    var fw = fctx.measureText(word).width / mu;\r\n    var fh =\r\n      Math.max(\r\n        fontSize * mu,\r\n        fctx.measureText(\"m\").width,\r\n        fctx.measureText(\"\\uFF37\").width\r\n      ) / mu;\r\n\r\n    // Create a boundary box that is larger than our estimates,\r\n    // so text don't get cut of (it sill might)\r\n    var boxWidth = fw + fh * 2;\r\n    var boxHeight = fh * 3;\r\n    var fgw = Math.ceil(boxWidth / g);\r\n    var fgh = Math.ceil(boxHeight / g);\r\n    boxWidth = fgw * g;\r\n    boxHeight = fgh * g;\r\n\r\n    // Calculate the proper offsets to make the text centered at\r\n    // the preferred position.\r\n\r\n    // This is simply half of the width.\r\n    var fillTextOffsetX = -fw / 2;\r\n    // Instead of moving the box to the exact middle of the preferred\r\n    // position, for Y-offset we move 0.4 instead, so Latin alphabets look\r\n    // vertical centered.\r\n    var fillTextOffsetY = -fh * 0.4;\r\n\r\n    // Calculate the actual dimension of the canvas, considering the rotation.\r\n    var cgh = Math.ceil(\r\n      (boxWidth * Math.abs(Math.sin(rotateDeg)) +\r\n        boxHeight * Math.abs(Math.cos(rotateDeg))) /\r\n        g\r\n    );\r\n    var cgw = Math.ceil(\r\n      (boxWidth * Math.abs(Math.cos(rotateDeg)) +\r\n        boxHeight * Math.abs(Math.sin(rotateDeg))) /\r\n        g\r\n    );\r\n    var width = cgw * g;\r\n    var height = cgh * g;\r\n\r\n    fcanvas.setAttribute(\"width\", width);\r\n    fcanvas.setAttribute(\"height\", height);\r\n\r\n    if (debug) {\r\n      // Attach fcanvas to the DOM\r\n      document.body.appendChild(fcanvas);\r\n      // Save it's state so that we could restore and draw the grid correctly.\r\n      fctx.save();\r\n    }\r\n\r\n    // Scale the canvas with |mu|.\r\n    fctx.scale(1 / mu, 1 / mu);\r\n    fctx.translate((width * mu) / 2, (height * mu) / 2);\r\n    fctx.rotate(-rotateDeg);\r\n\r\n    // Once the width/height is set, ctx info will be reset.\r\n    // Set it again here.\r\n    fctx.font =\r\n      fontWeight +\r\n      \" \" +\r\n      (fontSize * mu).toString(10) +\r\n      \"px \" +\r\n      settings.fontFamily;\r\n\r\n    // Fill the text into the fcanvas.\r\n    // XXX: We cannot because textBaseline = 'top' here because\r\n    // Firefox and Chrome uses different default line-height for canvas.\r\n    // Please read https://bugzil.la/737852#c6.\r\n    // Here, we use textBaseline = 'middle' and draw the text at exactly\r\n    // 0.5 * fontSize lower.\r\n    fctx.fillStyle = \"#000\";\r\n    fctx.textBaseline = \"middle\";\r\n    fctx.fillText(\r\n      word,\r\n      fillTextOffsetX * mu,\r\n      (fillTextOffsetY + fontSize * 0.5) * mu\r\n    );\r\n\r\n    // Get the pixels of the text\r\n    var imageData = fctx.getImageData(0, 0, width, height).data;\r\n\r\n    if (exceedTime()) {\r\n      return false;\r\n    }\r\n\r\n    if (debug) {\r\n      // Draw the box of the original estimation\r\n      fctx.strokeRect(fillTextOffsetX * mu, fillTextOffsetY, fw * mu, fh * mu);\r\n      fctx.restore();\r\n    }\r\n\r\n    // Read the pixels and save the information to the occupied array\r\n    var occupied = [];\r\n    var gx = cgw;\r\n    var gy, x, y;\r\n    var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\r\n    while (gx--) {\r\n      gy = cgh;\r\n      while (gy--) {\r\n        y = g;\r\n        /* eslint no-labels: [\"error\", { \"allowLoop\": true }] */\r\n        singleGridLoop: while (y--) {\r\n          x = g;\r\n          while (x--) {\r\n            if (imageData[((gy * g + y) * width + (gx * g + x)) * 4 + 3]) {\r\n              occupied.push([gx, gy]);\r\n\r\n              if (gx < bounds[3]) {\r\n                bounds[3] = gx;\r\n              }\r\n              if (gx > bounds[1]) {\r\n                bounds[1] = gx;\r\n              }\r\n              if (gy < bounds[0]) {\r\n                bounds[0] = gy;\r\n              }\r\n              if (gy > bounds[2]) {\r\n                bounds[2] = gy;\r\n              }\r\n\r\n              if (debug) {\r\n                fctx.fillStyle = \"rgba(255, 0, 0, 0.5)\";\r\n                fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\r\n              }\r\n              break singleGridLoop;\r\n            }\r\n          }\r\n        }\r\n        if (debug) {\r\n          fctx.fillStyle = \"rgba(0, 0, 255, 0.5)\";\r\n          fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (debug) {\r\n      fctx.fillStyle = \"rgba(0, 255, 0, 0.5)\";\r\n      fctx.fillRect(\r\n        bounds[3] * g,\r\n        bounds[0] * g,\r\n        (bounds[1] - bounds[3] + 1) * g,\r\n        (bounds[2] - bounds[0] + 1) * g\r\n      );\r\n    }\r\n\r\n    // Return information needed to create the text on the real canvas\r\n    return {\r\n      mu: mu,\r\n      occupied: occupied,\r\n      bounds: bounds,\r\n      gw: cgw,\r\n      gh: cgh,\r\n      fillTextOffsetX: fillTextOffsetX,\r\n      fillTextOffsetY: fillTextOffsetY,\r\n      fillTextWidth: fw,\r\n      fillTextHeight: fh,\r\n      fontSize: fontSize,\r\n    };\r\n  };\r\n\r\n  /* Determine if there is room available in the given dimension */\r\n  var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\r\n    // Go through the occupied points,\r\n    // return false if the space is not available.\r\n    var i = occupied.length;\r\n    while (i--) {\r\n      var px = gx + occupied[i][0];\r\n      var py = gy + occupied[i][1];\r\n\r\n      if (px >= ngx || py >= ngy || px < 0 || py < 0) {\r\n        if (!settings.drawOutOfBound) {\r\n          return false;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (!grid[px][py]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /* Actually draw the text on the grid */\r\n  var drawText = function drawText(\r\n    gx,\r\n    gy,\r\n    info,\r\n    word,\r\n    weight,\r\n    distance,\r\n    theta,\r\n    rotateDeg,\r\n    attributes,\r\n    extraDataArray\r\n  ) {\r\n    var fontSize = info.fontSize;\r\n    var color;\r\n    if (getTextColor) {\r\n      color = getTextColor(\r\n        word,\r\n        weight,\r\n        fontSize,\r\n        distance,\r\n        theta,\r\n        extraDataArray\r\n      );\r\n    } else {\r\n      color = settings.color;\r\n    }\r\n\r\n    // get fontWeight that will be used to set ctx.font and font style rule\r\n    var fontWeight;\r\n    if (getTextFontWeight) {\r\n      fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray);\r\n    } else {\r\n      fontWeight = settings.fontWeight;\r\n    }\r\n\r\n    var classes;\r\n    if (getTextClasses) {\r\n      classes = getTextClasses(word, weight, fontSize, extraDataArray);\r\n    } else {\r\n      classes = settings.classes;\r\n    }\r\n\r\n    elements.forEach(function (el) {\r\n      if (el.getContext) {\r\n        var ctx = el.getContext(\"2d\");\r\n        var mu = info.mu;\r\n\r\n        // Save the current state before messing it\r\n        ctx.save();\r\n        ctx.scale(1 / mu, 1 / mu);\r\n\r\n        ctx.font =\r\n          fontWeight +\r\n          \" \" +\r\n          (fontSize * mu).toString(10) +\r\n          \"px \" +\r\n          settings.fontFamily;\r\n        ctx.fillStyle = color;\r\n\r\n        // Translate the canvas position to the origin coordinate of where\r\n        // the text should be put.\r\n        ctx.translate((gx + info.gw / 2) * g * mu, (gy + info.gh / 2) * g * mu);\r\n\r\n        if (rotateDeg !== 0) {\r\n          ctx.rotate(-rotateDeg);\r\n        }\r\n\r\n        // Finally, fill the text.\r\n\r\n        // XXX: We cannot because textBaseline = 'top' here because\r\n        // Firefox and Chrome uses different default line-height for canvas.\r\n        // Please read https://bugzil.la/737852#c6.\r\n        // Here, we use textBaseline = 'middle' and draw the text at exactly\r\n        // 0.5 * fontSize lower.\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.fillText(\r\n          word,\r\n          info.fillTextOffsetX * mu,\r\n          (info.fillTextOffsetY + fontSize * 0.5) * mu\r\n        );\r\n\r\n        // The below box is always matches how <span>s are positioned\r\n        /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\r\n            info.fillTextWidth, info.fillTextHeight) */\r\n\r\n        // Restore the state.\r\n        ctx.restore();\r\n      } else {\r\n        // drawText on DIV element\r\n        var span = document.createElement(\"span\");\r\n        var transformRule = \"\";\r\n        transformRule = \"rotate(\" + (-rotateDeg / Math.PI) * 180 + \"deg) \";\r\n        if (info.mu !== 1) {\r\n          transformRule +=\r\n            \"translateX(-\" +\r\n            info.fillTextWidth / 4 +\r\n            \"px) \" +\r\n            \"scale(\" +\r\n            1 / info.mu +\r\n            \")\";\r\n        }\r\n        var styleRules = {\r\n          position: \"absolute\",\r\n          display: \"block\",\r\n          font:\r\n            fontWeight + \" \" + fontSize * info.mu + \"px \" + settings.fontFamily,\r\n          left: (gx + info.gw / 2) * g + info.fillTextOffsetX + \"px\",\r\n          top: (gy + info.gh / 2) * g + info.fillTextOffsetY + \"px\",\r\n          width: info.fillTextWidth + \"px\",\r\n          height: info.fillTextHeight + \"px\",\r\n          lineHeight: fontSize + \"px\",\r\n          whiteSpace: \"nowrap\",\r\n          transform: transformRule,\r\n          webkitTransform: transformRule,\r\n          msTransform: transformRule,\r\n          transformOrigin: \"50% 40%\",\r\n          webkitTransformOrigin: \"50% 40%\",\r\n          msTransformOrigin: \"50% 40%\",\r\n        };\r\n        if (color) {\r\n          styleRules.color = color;\r\n        }\r\n        span.textContent = word;\r\n        for (var cssProp in styleRules) {\r\n          span.style[cssProp] = styleRules[cssProp];\r\n        }\r\n        if (attributes) {\r\n          for (var attribute in attributes) {\r\n            span.setAttribute(attribute, attributes[attribute]);\r\n          }\r\n        }\r\n        if (classes) {\r\n          span.className += classes;\r\n        }\r\n        el.appendChild(span);\r\n      }\r\n    });\r\n  };\r\n\r\n  /* Help function to updateGrid */\r\n  var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\r\n    if (x >= ngx || y >= ngy || x < 0 || y < 0) {\r\n      return;\r\n    }\r\n\r\n    grid[x][y] = false;\r\n\r\n    if (drawMask) {\r\n      var ctx = elements[0].getContext(\"2d\");\r\n      ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\r\n    }\r\n\r\n    if (interactive) {\r\n      infoGrid[x][y] = { item: item, dimension: dimension };\r\n    }\r\n  };\r\n\r\n  /* Update the filling information of the given space with occupied points.\r\n       Draw the mask on the canvas if necessary. */\r\n  var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\r\n    var occupied = info.occupied;\r\n    var drawMask = settings.drawMask;\r\n    var ctx;\r\n    if (drawMask) {\r\n      ctx = elements[0].getContext(\"2d\");\r\n      ctx.save();\r\n      ctx.fillStyle = settings.maskColor;\r\n    }\r\n\r\n    var dimension;\r\n    if (interactive) {\r\n      var bounds = info.bounds;\r\n      dimension = {\r\n        x: (gx + bounds[3]) * g,\r\n        y: (gy + bounds[0]) * g,\r\n        w: (bounds[1] - bounds[3] + 1) * g,\r\n        h: (bounds[2] - bounds[0] + 1) * g,\r\n      };\r\n    }\r\n\r\n    var i = occupied.length;\r\n    while (i--) {\r\n      var px = gx + occupied[i][0];\r\n      var py = gy + occupied[i][1];\r\n\r\n      if (px >= ngx || py >= ngy || px < 0 || py < 0) {\r\n        continue;\r\n      }\r\n\r\n      fillGridAt(px, py, drawMask, dimension, item);\r\n    }\r\n\r\n    if (drawMask) {\r\n      ctx.restore();\r\n    }\r\n  };\r\n\r\n  /* putWord() processes each item on the list,\r\n       calculate it's size and determine it's position, and actually\r\n       put it on the canvas. */\r\n  var putWord = function putWord(item) {\r\n    var word, weight, attributes;\r\n    if (Array.isArray(item)) {\r\n      word = item[0];\r\n      weight = item[1];\r\n    } else {\r\n      word = item.word;\r\n      weight = item.weight;\r\n      attributes = item.attributes;\r\n    }\r\n    var rotateDeg = getRotateDeg();\r\n\r\n    var extraDataArray = getItemExtraData(item);\r\n\r\n    // get info needed to put the text onto the canvas\r\n    var info = getTextInfo(word, weight, rotateDeg, extraDataArray);\r\n\r\n    // not getting the info means we shouldn't be drawing this one.\r\n    if (!info) {\r\n      return false;\r\n    }\r\n\r\n    if (exceedTime()) {\r\n      return false;\r\n    }\r\n\r\n    // If drawOutOfBound is set to false,\r\n    // skip the loop if we have already know the bounding box of\r\n    // word is larger than the canvas.\r\n    if (!settings.drawOutOfBound && !settings.shrinkToFit) {\r\n      var bounds = info.bounds;\r\n      if (bounds[1] - bounds[3] + 1 > ngx || bounds[2] - bounds[0] + 1 > ngy) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Determine the position to put the text by\r\n    // start looking for the nearest points\r\n    var r = maxRadius + 1;\r\n\r\n    var tryToPutWordAtPoint = function (gxy) {\r\n      var gx = Math.floor(gxy[0] - info.gw / 2);\r\n      var gy = Math.floor(gxy[1] - info.gh / 2);\r\n      var gw = info.gw;\r\n      var gh = info.gh;\r\n\r\n      // If we cannot fit the text at this position, return false\r\n      // and go to the next position.\r\n      if (!canFitText(gx, gy, gw, gh, info.occupied)) {\r\n        return false;\r\n      }\r\n\r\n      // Actually put the text on the canvas\r\n      drawText(\r\n        gx,\r\n        gy,\r\n        info,\r\n        word,\r\n        weight,\r\n        maxRadius - r,\r\n        gxy[2],\r\n        rotateDeg,\r\n        attributes,\r\n        extraDataArray\r\n      );\r\n\r\n      // Mark the spaces on the grid as filled\r\n      updateGrid(gx, gy, gw, gh, info, item);\r\n\r\n      // Return true so some() will stop and also return true.\r\n      return true;\r\n    };\r\n\r\n    while (r--) {\r\n      var points = getPointsAtRadius(maxRadius - r);\r\n\r\n      if (settings.shuffle) {\r\n        points = [].concat(points);\r\n        shuffleArray(points);\r\n      }\r\n\r\n      // Try to fit the words by looking at each point.\r\n      // array.some() will stop and return true\r\n      // when putWordAtPoint() returns true.\r\n      // If all the points returns false, array.some() returns false.\r\n      var drawn = points.some(tryToPutWordAtPoint);\r\n\r\n      if (drawn) {\r\n        // leave putWord() and return true\r\n        return true;\r\n      }\r\n    }\r\n    if (settings.shrinkToFit) {\r\n      if (Array.isArray(item)) {\r\n        item[1] = (item[1] * 3) / 4;\r\n      } else {\r\n        item.weight = (item.weight * 3) / 4;\r\n      }\r\n      return putWord(item);\r\n    }\r\n    // we tried all distances but text won't fit, return false\r\n    return false;\r\n  };\r\n\r\n  /* Send DOM event to all elements. Will stop sending event and return\r\n       if the previous one is canceled (for cancelable events). */\r\n  var sendEvent = function sendEvent(type, cancelable, details) {\r\n    if (cancelable) {\r\n      return !elements.some(function (el) {\r\n        var event = new CustomEvent(type, {\r\n          detail: details || {},\r\n        });\r\n        return !el.dispatchEvent(event);\r\n      }, this);\r\n    } else {\r\n      elements.forEach(function (el) {\r\n        var event = new CustomEvent(type, {\r\n          detail: details || {},\r\n        });\r\n        el.dispatchEvent(event);\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  /* Start drawing on a canvas */\r\n  var start = function start() {\r\n    // For dimensions, clearCanvas etc.,\r\n    // we only care about the first element.\r\n    var canvas = elements[0];\r\n\r\n    if (canvas.getContext) {\r\n      ngx = Math.ceil(canvas.width / g);\r\n      ngy = Math.ceil(canvas.height / g);\r\n    } else {\r\n      var rect = canvas.getBoundingClientRect();\r\n      ngx = Math.ceil(rect.width / g);\r\n      ngy = Math.ceil(rect.height / g);\r\n    }\r\n\r\n    // Sending a wordcloudstart event which cause the previous loop to stop.\r\n    // Do nothing if the event is canceled.\r\n    if (!sendEvent(\"wordcloudstart\", true)) {\r\n      return;\r\n    }\r\n\r\n    // Determine the center of the word cloud\r\n    center = settings.origin\r\n      ? [settings.origin[0] / g, settings.origin[1] / g]\r\n      : [ngx / 2, ngy / 2];\r\n\r\n    // Maxium radius to look for space\r\n    maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\r\n\r\n    /* Clear the canvas only if the clearCanvas is set,\r\n         if not, update the grid to the current canvas state */\r\n    grid = [];\r\n\r\n    var gx, gy, i;\r\n    if (!canvas.getContext || settings.clearCanvas) {\r\n      elements.forEach(function (el) {\r\n        if (el.getContext) {\r\n          var ctx = el.getContext(\"2d\");\r\n          ctx.fillStyle = settings.backgroundColor;\r\n          ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\r\n          ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\r\n        } else {\r\n          el.textContent = \"\";\r\n          el.style.backgroundColor = settings.backgroundColor;\r\n          el.style.position = \"relative\";\r\n        }\r\n      });\r\n\r\n      /* fill the grid with empty state */\r\n      gx = ngx;\r\n      while (gx--) {\r\n        grid[gx] = [];\r\n        gy = ngy;\r\n        while (gy--) {\r\n          grid[gx][gy] = true;\r\n        }\r\n      }\r\n    } else {\r\n      /* Determine bgPixel by creating\r\n           another canvas and fill the specified background color. */\r\n      var bctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n\r\n      bctx.fillStyle = settings.backgroundColor;\r\n      bctx.fillRect(0, 0, 1, 1);\r\n      var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\r\n\r\n      /* Read back the pixels of the canvas we got to tell which part of the\r\n           canvas is empty.\r\n           (no clearCanvas only works with a canvas, not divs) */\r\n      var imageData = canvas\r\n        .getContext(\"2d\")\r\n        .getImageData(0, 0, ngx * g, ngy * g).data;\r\n\r\n      gx = ngx;\r\n      var x, y;\r\n      while (gx--) {\r\n        grid[gx] = [];\r\n        gy = ngy;\r\n        while (gy--) {\r\n          y = g;\r\n          /* eslint no-labels: [\"error\", { \"allowLoop\": true }] */\r\n          singleGridLoop: while (y--) {\r\n            x = g;\r\n            while (x--) {\r\n              i = 4;\r\n              while (i--) {\r\n                if (\r\n                  imageData[((gy * g + y) * ngx * g + (gx * g + x)) * 4 + i] !==\r\n                  bgPixel[i]\r\n                ) {\r\n                  grid[gx][gy] = false;\r\n                  break singleGridLoop;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (grid[gx][gy] !== false) {\r\n            grid[gx][gy] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      imageData = bctx = bgPixel = undefined;\r\n    }\r\n\r\n    // fill the infoGrid with empty state if we need it\r\n    if (settings.hover || settings.click) {\r\n      interactive = true;\r\n\r\n      /* fill the grid with empty state */\r\n      gx = ngx + 1;\r\n      while (gx--) {\r\n        infoGrid[gx] = [];\r\n      }\r\n\r\n      if (settings.hover) {\r\n        canvas.addEventListener(\"mousemove\", wordcloudhover);\r\n      }\r\n\r\n      if (settings.click) {\r\n        canvas.addEventListener(\"click\", wordcloudclick);\r\n        canvas.style.webkitTapHighlightColor = \"rgba(0, 0, 0, 0)\";\r\n      }\r\n\r\n      canvas.addEventListener(\"wordcloudstart\", function stopInteraction() {\r\n        canvas.removeEventListener(\"wordcloudstart\", stopInteraction);\r\n        canvas.removeEventListener(\"mousemove\", wordcloudhover);\r\n        canvas.removeEventListener(\"click\", wordcloudclick);\r\n        hovered = undefined;\r\n      });\r\n    }\r\n\r\n    i = 0;\r\n    var loopingFunction, stoppingFunction;\r\n    if (settings.wait !== 0) {\r\n      loopingFunction = window.setTimeout;\r\n      stoppingFunction = window.clearTimeout;\r\n    } else {\r\n      loopingFunction = window.setImmediate;\r\n      stoppingFunction = window.clearImmediate;\r\n    }\r\n\r\n    var addEventListener = function addEventListener(type, listener) {\r\n      elements.forEach(function (el) {\r\n        el.addEventListener(type, listener);\r\n      }, this);\r\n    };\r\n\r\n    var removeEventListener = function removeEventListener(type, listener) {\r\n      elements.forEach(function (el) {\r\n        el.removeEventListener(type, listener);\r\n      }, this);\r\n    };\r\n\r\n    var anotherWordCloudStart = function anotherWordCloudStart() {\r\n      removeEventListener(\"wordcloudstart\", anotherWordCloudStart);\r\n      stoppingFunction(timer[timerId]);\r\n    };\r\n\r\n    addEventListener(\"wordcloudstart\", anotherWordCloudStart);\r\n    timer[timerId] = loopingFunction(function loop() {\r\n      if (i >= settings.list.length) {\r\n        stoppingFunction(timer[timerId]);\r\n        sendEvent(\"wordcloudstop\", false);\r\n        removeEventListener(\"wordcloudstart\", anotherWordCloudStart);\r\n        delete timer[timerId];\r\n        return;\r\n      }\r\n      escapeTime = new Date().getTime();\r\n      var drawn = putWord(settings.list[i]);\r\n      var canceled = !sendEvent(\"wordclouddrawn\", true, {\r\n        item: settings.list[i],\r\n        drawn: drawn,\r\n      });\r\n      if (exceedTime() || canceled) {\r\n        stoppingFunction(timer[timerId]);\r\n        settings.abort();\r\n        sendEvent(\"wordcloudabort\", false);\r\n        sendEvent(\"wordcloudstop\", false);\r\n        removeEventListener(\"wordcloudstart\", anotherWordCloudStart);\r\n        delete timer[timerId];\r\n        return;\r\n      }\r\n      i++;\r\n      timer[timerId] = loopingFunction(loop, settings.wait);\r\n    }, settings.wait);\r\n  };\r\n\r\n  // All set, start the drawing\r\n  start();\r\n};\r\n\r\nWordCloud.isSupported = isSupported;\r\nWordCloud.minFontSize = minFontSize;\r\nWordCloud.stop = function stop() {\r\n  if (timer) {\r\n    for (var timerId in timer) {\r\n      window.clearImmediate(timer[timerId]);\r\n    }\r\n  }\r\n};\r\nexport default WordCloud;\r\n","\n\nimport * as React from \"react\";\n\nimport wordCloud from './JSLib/wordcloud2.js';\n;\n\nfunction Words(Props) {\n  var options = Props.options;\n  React.useEffect((function () {\n          wordCloud(document.getElementById(\"html-canvas\"), options);\n          \n        }), []);\n  return React.createElement(\"div\", undefined, React.createElement(\"div\", {\n                  className: \"canvas\",\n                  id: \"html-canvas\"\n                }));\n}\n\nvar make = Words;\n\nexport {\n  make ,\n  \n}\n/*  Not a pure module */\n","\n\nimport * as React from \"react\";\nimport * as Caml_obj from \"bs-platform/lib/es6/caml_obj.js\";\nimport * as Words$MyRescriptApp from \"./Words.bs.js\";\n\nfunction trace(el, text) {\n  console.log(text, el);\n  return el;\n}\n\nvar emptyTrans_backTranslations = [];\n\nvar emptyTrans = {\n  confidence: 0,\n  backTranslations: emptyTrans_backTranslations\n};\n\nfunction synonymRecordFactory(trans) {\n  return trans.backTranslations.map(function (backTrans) {\n              return {\n                      synonym: backTrans.displayText,\n                      confidence: trans.confidence * backTrans.frequencyCount | 0\n                    };\n            });\n}\n\nfunction combineRepetitions(arr) {\n  return arr.reduce((function (acc, item) {\n                var combinedConfidence = arr.filter(function (item2) {\n                        return item2.synonym === item.synonym;\n                      }).reduce((function (acc, item) {\n                        return {\n                                synonym: item.synonym,\n                                confidence: acc.confidence + item.confidence | 0\n                              };\n                      }), {\n                      synonym: item.synonym,\n                      confidence: 0\n                    });\n                return acc.concat(acc.some(function (item) {\n                                return Caml_obj.caml_equal(item, combinedConfidence);\n                              }) ? [] : [combinedConfidence]);\n              }), []);\n}\n\nfunction Content(Props) {\n  var content = Props.content;\n  var result = combineRepetitions(content.translations.reduce((function (acc, trans) {\n                  return acc.concat(synonymRecordFactory(trans));\n                }), []).filter(function (el) {\n              return el.synonym !== content.displaySource;\n            })).map(function (item) {\n        return {\n                synonym: item.synonym,\n                confidence: item.confidence < 800 ? 800 : item.confidence\n              };\n      });\n  var match = result.length;\n  if (match !== 0) {\n    return React.createElement(Words$MyRescriptApp.make, {\n                options: {\n                  list: result.map(function (item) {\n                        return [\n                                item.synonym,\n                                item.confidence / 50 | 0\n                              ];\n                      })\n                }\n              });\n  } else {\n    return React.createElement(\"div\", undefined, \"No synonyms found for this word.\");\n  }\n}\n\nvar make = Content;\n\nexport {\n  trace ,\n  emptyTrans ,\n  synonymRecordFactory ,\n  combineRepetitions ,\n  make ,\n  \n}\n/* react Not a pure module */\n","\n\nimport * as React from \"react\";\nimport * as Caml_array from \"bs-platform/lib/es6/caml_array.js\";\nimport * as Content$MyRescriptApp from \"./Content.bs.js\";\nimport * as Network$MyRescriptApp from \"./Network.bs.js\";\n\nfunction Fetch(Props) {\n  var word = Props.word;\n  var state = Network$MyRescriptApp.useFetch(word);\n  if (typeof state === \"number\") {\n    if (state === /* NotCalled */0) {\n      return React.createElement(\"div\", undefined, \"Please enter word\");\n    } else {\n      return React.createElement(\"div\", undefined, \"Loading...\");\n    }\n  }\n  switch (state.TAG | 0) {\n    case /* Error */0 :\n        return React.createElement(\"div\", undefined, (console.log(state._0), \"An error occurred!\"));\n    case /* BadRequest */1 :\n        return React.createElement(\"div\", undefined, state._0);\n    case /* Loaded */2 :\n        var synonyms = state._0;\n        var match = Caml_array.get(synonyms, 0).translations.length;\n        if (match !== 0) {\n          return React.createElement(Content$MyRescriptApp.make, {\n                      content: Caml_array.get(synonyms, 0)\n                    });\n        } else {\n          return React.createElement(\"div\", undefined, \"No data for this word\");\n        }\n    \n  }\n}\n\nvar make = Fetch;\n\nexport {\n  make ,\n  \n}\n/* react Not a pure module */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\n\nfunction useFetch(word) {\n  var match = React.useState(function () {\n        return /* NotCalled */0;\n      });\n  var setState = match[1];\n  React.useEffect((function () {\n          if (word === \"\") {\n            Curry._1(setState, (function (_previousState) {\n                    return /* NotCalled */0;\n                  }));\n            return ;\n          }\n          Curry._1(setState, (function (_previousState) {\n                  return /* Loading */1;\n                }));\n          var request = new XMLHttpRequest();\n          request.addEventListener(\"load\", (function (param) {\n                  var match = JSON.stringify(request.response).charAt(1);\n                  if (match === \"[\") {\n                    return Curry._1(setState, (function (_previousState) {\n                                  return {\n                                          TAG: /* Loaded */2,\n                                          _0: JSON.parse(request.response)\n                                        };\n                                }));\n                  } else {\n                    return Curry._1(setState, (function (_previousState) {\n                                  return {\n                                          TAG: /* BadRequest */1,\n                                          _0: JSON.stringify(request.response)\n                                        };\n                                }));\n                  }\n                }));\n          request.addEventListener(\"error\", (function (err) {\n                  return Curry._1(setState, (function (_previousState) {\n                                return {\n                                        TAG: /* Error */0,\n                                        _0: err\n                                      };\n                              }));\n                }));\n          request.open(\"GET\", \"https://limitless-temple-03902.herokuapp.com/?word=\" + word + \"&from=en&to=es\");\n          request.send();\n          return (function (param) {\n                    request.abort();\n                    \n                  });\n        }), [word]);\n  return match[0];\n}\n\nexport {\n  useFetch ,\n  \n}\n/* react Not a pure module */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Fetch$MyRescriptApp from \"./Fetch.bs.js\";\n\nimport './App.css';\n;\n\nfunction App$QueryInput(Props) {\n  var word = Props.word;\n  var setWord = Props.setWord;\n  var match = React.useState(function () {\n        return word;\n      });\n  var setInputValue = match[1];\n  var inputValue = match[0];\n  var onSubmit = function (_evt) {\n    _evt.preventDefault();\n    return Curry._1(setWord, (function (_previousState) {\n                  return inputValue;\n                }));\n  };\n  var onChange = function (_evt) {\n    return Curry._1(setInputValue, (function (_previousState) {\n                  return _evt.target.value;\n                }));\n  };\n  return React.createElement(\"div\", {\n              className: \"query-input\"\n            }, React.createElement(\"form\", {\n                  onSubmit: onSubmit\n                }, React.createElement(\"input\", {\n                      type: \"text\",\n                      value: inputValue,\n                      onChange: onChange\n                    }), React.createElement(\"button\", {\n                      type: \"submit\"\n                    }, \"Lookup\"), React.createElement(\"p\", undefined), \"Source Lang\", React.createElement(\"input\", {\n                      type: \"button\",\n                      value: \"En\"\n                    }), React.createElement(\"input\", {\n                      type: \"button\",\n                      value: \"En\"\n                    }), React.createElement(\"p\", undefined), \"Target Lang\", React.createElement(\"input\", {\n                      type: \"button\",\n                      value: \"En\"\n                    }), React.createElement(\"input\", {\n                      type: \"button\",\n                      value: \"En\"\n                    })));\n}\n\nvar QueryInput = {\n  make: App$QueryInput\n};\n\nfunction App(Props) {\n  var match = React.useState(function () {\n        return \"\";\n      });\n  var word = match[0];\n  return React.createElement(\"div\", {\n              className: \"App\"\n            }, React.createElement(App$QueryInput, {\n                  word: word,\n                  setWord: match[1]\n                }), React.createElement(\"p\", undefined), React.createElement(Fetch$MyRescriptApp.make, {\n                  word: word\n                }), React.createElement(\"p\", undefined));\n}\n\nvar make = App;\n\nexport {\n  QueryInput ,\n  make ,\n  \n}\n/*  Not a pure module */\n","\n\nimport * as React from \"react\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as App$MyRescriptApp from \"./App.bs.js\";\nimport * as ReactDomExperimental$MyRescriptApp from \"./bindings/ReactDomExperimental.bs.js\";\n\nimport './Index.css';\n;\n\nvar root = ReactDomExperimental$MyRescriptApp.createRootWithId(\"root\");\n\nif (root !== undefined) {\n  Caml_option.valFromOption(root).render(React.createElement(React.StrictMode, {\n            children: React.createElement(App$MyRescriptApp.make, {})\n          }));\n} else {\n  console.log(\"Could not find root element.\");\n}\n\nexport {\n  \n}\n/*  Not a pure module */\n","\n\nimport * as ReactDom from \"react-dom\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\n\nfunction createRootWithId(id) {\n  var element = document.getElementById(id);\n  if (!(element == null)) {\n    return Caml_option.some(ReactDom.unstable_createRoot(element));\n  }\n  \n}\n\nfunction createBlockingRootWithId(id) {\n  var element = document.getElementById(id);\n  if (!(element == null)) {\n    return Caml_option.some(ReactDom.unstable_createBlockingRoot(element));\n  }\n  \n}\n\nexport {\n  createRootWithId ,\n  createBlockingRootWithId ,\n  \n}\n/* react-dom Not a pure module */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './Index.bs';\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nimport reportWebVitals from './reportWebVitals';\nreportWebVitals();\n"],"sourceRoot":""}